# An extension of docker-compose.yml
#
# Builds a docker image for licences
# Runs the containers from docker-compose.yml, a container for the licences image and an additional container
# for the licences image that overrides the default command to run the stubs.
#
version: '3.8'
services:
  licences:
#    image: quay.io/hmpps/licences:2021-01-05.13367.84d8749
#    image: quay.io/hmpps/licences:2020-11-24.13298.8099492
    build: .
    deploy:
      resources:
        limits:
          memory: 150M
    networks:
      - hmpps
    container_name: licences
    restart: always
    depends_on:
      - licence-db
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: "test"
      ENABLE_TEST_UTILS: "true"
      DB_SSL_ENABLED: "false"
      NOMIS_AUTH_URL: "http://hmpps-auth:8080/auth"
      NOMIS_AUTH_EXTERNAL_URL: "http://localhost:9090/auth"
      TOKENVERIFICATION_API_URL: "http://token-verification-api:8080"
      NOMIS_API_URL: "http://stubs:8080/elite2api"
      DELIUS_API_URL: "http://stubs:8080/communityapi"
      PROBATION_TEAMS_API_URL: "http://stubs:8080/probationteams"
      PORT: "3000"
      DB_USER: "licences"
      DB_PASS: "licences"
      DB_SERVER: "licence-db"
      API_CLIENT_ID: "licences"
      API_CLIENT_SECRET: "clientsecret"
      ADMIN_API_CLIENT_ID: "licencesadmin"
      ADMIN_API_CLIENT_SECRET: "clientsecret"

  stubs:
    build: .
    command: npm run start-mocks
    networks:
      - hmpps
    container_name: stubs
    restart: always
    ports:
      - '3001:8080'
    environment:
      NODE_ENV: "dev"

  licence-db:
    image: postgres
    networks:
      - hmpps
    container_name: licence-db
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=licences
      - POSTGRES_USER=licences
      - POSTGRES_DB=licences

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - '9090:8080'
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8080/auth/health' ]
    environment:
      SPRING_PROFILES_ACTIVE: dev,token-verification
      TOKENVERIFICATION_ENDPOINT_URL: "http://token-verification-api:8080"
      DELIUS_ENABLED: "false"

  token-verification-api:
    image: quay.io/hmpps/token-verification-api:latest
    networks:
      - hmpps
      - token-backend
    container_name: token-verification-api
    depends_on:
      - token-verification-api-db
      - hmpps-auth
    ports:
      - "8100:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      SPRING_PROFILES_ACTIVE: local-redis
      SPRING_REDIS_HOST: token-verification-api-db
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "http://hmpps-auth:8080/auth/.well-known/jwks.json"

  token-verification-api-db:
    image: redis
    networks:
      - token-backend
    container_name: token-verification-api-db
    restart: always
    ports:
      - '6379:6379'

networks:
  hmpps:
  token-backend:
    internal: true
