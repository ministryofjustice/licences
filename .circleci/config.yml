version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@1.1.2

executors:
  integration-tests:
    docker:
      - image: circleci/openjdk:11-jdk-node-browsers
      - image: circleci/postgres:10.6-alpine-ram
        environment:
          POSTGRES_USER: licences
          POSTGRES_DB: licences
      - image: quay.io/hmpps/hmpps-auth:latest
        name: hmpps-auth
        environment:
          SPRING_PROFILES_ACTIVE: dev
          SERVER_PORT: 9090
    working_directory: ~/app

jobs:
  build:
    executor: hmpps/node
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Linter check
          command: npm run lint
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - dist
            - assets/stylesheets
            - .cache/Cypress

  unit_test:
    executor: hmpps/node
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test-ci
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    environment:
      DB_SSL_ENABLED: false
      ENABLE_TEST_UTILS: true
      NOMIS_API_URL: http://localhost:8080/elite2api
      NOMIS_AUTH_URL: http://hmpps-auth:9090/auth
      DELIUS_API_URL: http://localhost:8080/communityapi
      PROBATION_TEAMS_API_URL: http://localhost:8080/probationteams
      TOKENVERIFICATION_API_ENABLED: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Run the mock server.
          command: npm run start-mocks
          background: true
      - run:
          name: Run the node app.
          command: npm start
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: Seed db
          command: npm run db:seed
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "licences-specs/build.gradle" }}
      - run:
          name: Run Integration Tests
          command: ./gradlew mockTest --info
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "licences-specs/build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_artifacts:
          path: licences-specs/build/reports
          destination: integration/spock
      - store_artifacts:
          path: licences-specs/build/geb-reports
          destination: integration/geb
      - store_test_results:
          path: licences-specs/build/test-results

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
        filters:
          tags:
            ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context: licences-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          context: licences-prod
          requires:
            - request-prod-approval

  scheduled:
    triggers:
      - schedule:
          cron: "0 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit
