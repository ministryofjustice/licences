defaults: &defaults
  working_directory: ~/noms-digital-studio/licences
  docker:
    - image: circleci/node:8.10.0-browsers

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - node_modules-{{ checksum "package.json" }}
            - node_modules
            - yarn-cache
      - run:
          command: node -v
      - run:
          name: yarn install
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - save_cache:
          key: yarn-cache
          paths:
            - ~/.cache/yarn
      - run:
          name: Linter check
          command: yarn run lint
#      - run:
#          name: Security check
#          command: yarn run snyk-protect
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - node_modules-{{ checksum "package.json" }}
            - node_modules
            - yarn-cache
      - run:
          name: unit tests with coverage
          command: yarn run test-with-coverage-ci
          environment:
            MOCHA_FILE: ./reports/test-results.xml
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: coverage
          destination: coverage


  deploy_and_accept_mock:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - node_modules-{{ checksum "package.json" }}
            - node_modules
            - yarn-cache
      - add_ssh_keys:
          fingerprints:
            - "ce:dc:1a:a6:a5:39:ba:eb:ac:9d:ca:9a:46:e3:74:99"
      - run:
          name: build deployment package
          command: |
            yarn run build
            export BUILD_NUMBER="$CIRCLE_BUILD_NUM"
            export GIT_REF="$CIRCLE_SHA1"
            yarn run record-build-info
            git add --force --verbose assets/stylesheets build-info.json
            git config user.name "Circle CI"
            git config user.email "circle@circleci.com"
            git commit \
              -m "Deployment of build $CIRCLE_BUILD_NUM" \
              -m "$(git log --format=%B -n 1 $CIRCLE_SHA1)" \
              -m "From gitref $CIRCLE_SHA1"
            git push --force origin HEAD:deploy-to-mock
      - run:
          name: wait for mock deployment to complete
          command: |
            export GIT_REF="$CIRCLE_SHA1"
            export APP_BASE_URL="https://licences-mock.hmpps.dsd.io/health"
            export WAIT_DURATION="45000"
            yarn run wait-for-deploy
      - run:
          name: execute feature tests - mock
          command: |
            curl -v -X POST https://circleci.com/api/v1.1/project/github/noms-digital-studio/licences-feature-specs?circle-token=$CIRCLE_TOKEN
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build
            - build-info.json

  build_docker:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/noms-digital-studio/licences
      - setup_remote_docker:
          exclusive: true
      - run:
          name: Build container and publish to docker hub (master only)
          command: |
             VERSION=$(egrep buildNumber build-info.json  | awk -F"\"" '{print $4}')
             GIT_REF=$(egrep gitRef build-info.json  | awk -F"\"" '{print $8}')
             BUILD_VERSION=LICENCES_${VERSION}

             docker build --rm=false . \
                 --build-arg BUILD_NUMBER=$VERSION \
                 --build-arg GIT_REF=$GIT_REF \
                 --tag "mjwillis/licences:$BUILD_VERSION" \
                 --label "maintainer=licences-team@digital.justice.gov.uk" \
                 --label "build.number=$CIRCLE_BUILD_NUM" \
                 --label "build.url=$CIRCLE_BUILD_URL" \
                 --label "build.gitref=$GIT_REF"

             docker login -u $DOCKER_USER -p $DOCKER_PASS
             docker tag mjwillis/licences:$BUILD_VERSION mjwillis/licences:latest
             docker push mjwillis/licences:$BUILD_VERSION
             docker push mjwillis/licences:latest

  deploy_release_to_eb:
      <<: *defaults
      steps:
        - checkout
        - attach_workspace:
            at: ~/noms-digital-studio/licences
        - deploy:
            name: Install elastic beanstalk CLI
            command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                sudo apt-get install python-pip python-dev
                pip install --user 'six>-1.9.0' awsebcli --ignore-installed
              fi
        - deploy:
            name: Deploy to Elastic Beanstalk Dev
            command: |
              VERSION=$(egrep buildNumber build-info.json  | awk -F"\"" '{print $4}')
              yarn run plant-beanstalk LICENCES_${VERSION}
              ~/.local/bin/eb deploy --process --verbose

  deploy_stage:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/noms-digital-studio/licences
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ce:dc:1a:a6:a5:39:ba:eb:ac:9d:ca:9a:46:e3:74:99"
      - run:
          name: Deploy latest mock deployment into stage
          command: |
            git config user.name "Circle CI"
            git config user.email "circle@circleci.com"
            git push --force origin HEAD:deploy-to-stage
  accept_stage:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/noms-digital-studio/licences
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - node_modules-{{ checksum "package.json" }}
            - node_modules
            - yarn-cache
      - run:
          name: wait for stage deployment to complete
          command: |
              export GIT_REF=$(git rev-parse "$CIRCLE_SHA1"^)
              export APP_BASE_URL="https://licences-stage.hmpps.dsd.io/health"
              export WAIT_DURATION="45000"
              yarn run wait-for-deploy
      - run:
          name: execute feature tests - stage
          command: |
            curl -v -X POST --data build_parameters[CIRCLE_JOB]=accept_stage \
              https://circleci.com/api/v1.1/project/github/noms-digital-studio/licences-feature-specs?circle-token=$CIRCLE_TOKEN
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /deploy-to.*/
      - test:
          requires:
            - build
          filters:
            branches:
              ignore:
                - /deploy-to.*/
      - deploy_and_accept_mock:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - build_docker:
          requires:
            - deploy_and_accept_mock
          filters:
            branches:
              only:
                - master
      - hold:
          type: approval
          filters:
            branches:
              only:
                - deploy-to-mock
      - deploy_stage:
          filters:
            branches:
              only:
                - deploy-to-mock
          requires:
            - hold
      - accept_stage:
          filters:
            branches:
              only:
                - deploy-to-stage
